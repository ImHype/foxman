#!/usr/bin/env node
'use strict';
require('colors');
const path = require('path');
const pkg = require('../package.json');
const argv = require('yargs')
    .usage('Usage: foxman [options]')
    .alias('C', 'config')
    .alias('C', 'c')
    .describe('C', '配置文件路径')
    .default('C', 'foxman.config.js')

    .alias('P', 'proxy')
    .alias('P', 'p')
    .describe('P', '使用配置中的代理，填写代理名即可')
    .default('P', false)

    .alias('p', 'port')
    .describe('p', '指定临时端口')
    .default('p', false)

    .alias('U', 'update')
    .alias('U', 'u')
    .describe('U', '是否远程nei中拉取接口信息')
    .default('U', false)

    .alias('V', 'version')
    .alias('V', 'v')
    .describe('V', 'Show version')
    .version(() => `v${pkg.version}`)

    .help('H')
    .alias('H', 'help')
    .alias('H', 'h')

    .example('foxman -C ./config.json -P local -U')
    .argv;

let config;
const configPath = path.join(process.cwd(), argv.config);
const log = console.log;

try {
    config = require(configPath);
} catch (err) {
    const e = 'error'.red;
    if (err.code === 'MODULE_NOT_FOUND') {
        if (~err.toString().indexOf(configPath)) {
            log(e, `Please add foxman.config.js in current directory.`);
            log(e, `Also you can appoint your special name,`);
            log(e, `use command 'foxman --config yourfoxman.config.js'.`);
            log(e, `See more in command 'foxman --help'`);

        } else {
            log(e, `Make sure you have the latest version of node.js and foxman.`);
            log(e, `If you do, this is most likely a problem with the plugins used in ${path.join(process.cwd(), 'foxman.config.js')},`);
            log(e, `not with foxman itself`);
            log('\n');
            log(err.stack);
            log('\n');
            log(e,`You can try 'npm install' or check the foxman.config.js`);
        }
    } else {
        log(e, `Maybe it's a problem with foxman, contact us(http://github.com/kaola-fed/foxman/issues)`);
        log(err)
    }
    return false;
}

if (argv.port) {
    config.server.port = parseInt(argv.port);
}

require('../app')(Object.assign({}, config, {argv}));